viper ~ VIPER ~ 1
head ~ HEAD ~ 1
main ~ MAIN ~ 2
is ~ IS ~ 2
@prod_price ~ VAR_ID ~ 3
: ~ COLON ~ 3
real ~ REAL ~ 3
; ~ SCOLON ~ 3
@sales_comm ~ VAR_ID ~ 4
: ~ COLON ~ 4
real ~ REAL ~ 4
; ~ SCOLON ~ 4
@custm_disc ~ VAR_ID ~ 5
: ~ COLON ~ 5
real ~ REAL ~ 5
; ~ SCOLON ~ 5
out ~ OUT ~ 7
( ~ L_PAREN ~ 7
"Productprice:" ~ STR_LIT ~ 7
) ~ R_PAREN ~ 7
; ~ SCOLON ~ 7
in ~ IN ~ 8
( ~ L_PAREN ~ 8
) ~ R_PAREN ~ 8
; ~ SCOLON ~ 8
out ~ OUT ~ 10
( ~ L_PAREN ~ 10
"Salespersoncommission: " ~ STR_LIT ~ 10
) ~ R_PAREN ~ 10
in ~ IN ~ 11
( ~ L_PAREN ~ 11
@sales_comm ~ VAR_ID ~ 11
) ~ R_PAREN ~ 11
; ~ SCOLON ~ 11
out ~ OUT ~ 13
( ~ L_PAREN ~ 13
"Customer discount (%): " ~ STR_LIT ~ 13
) ~ R_PAREN ~ 13
; ~ SCOLON ~ 13
in ~ IN ~ 14
( ~ L_PAREN ~ 14
@custm_disc ~ VAR_ID ~ 14
) ~ R_PAREN ~ 14
; ~ SCOLON ~ 14
@value ~ VAR_ID ~ 16
: ~ COLON ~ 16
real ~ REAL ~ 16
; ~ SCOLON ~ 16
$final_price ~ FN_ID ~ 17
( ~ L_PAREN ~ 17
@prod_price ~ VAR_ID ~ 17
, ~ COMMA ~ 17
@sales_comm ~ VAR_ID ~ 17
, ~ COMMA ~ 17
@custm_disc ~ VAR_ID ~ 17
) ~ R_PAREN ~ 17
; ~ SCOLON ~ 17
@varctr ~ VAR_ID ~ 19
: ~ COLON ~ 19
integer ~ INT ~ 19
; ~ SCOLON ~ 19
@subctr ~ VAR_ID ~ 20
: ~ COLON ~ 20
integer ~ INT ~ 20
; ~ SCOLON ~ 20
@varlimit ~ VAR_ID ~ 21
: ~ COLON ~ 21
integer ~ INT ~ 21
= ~ EQUALS ~ 21
; ~ SCOLON ~ 21
@varbase ~ VAR_ID ~ 22
: ~ COLON ~ 22
integer ~ INT ~ 22
= ~ EQUALS ~ 22
10 ~ INT_LIT ~ 22
; ~ SCOLON ~ 22
for ~ FOR ~ 24
( ~ L_PAREN ~ 24
@varctr ~ VAR_ID ~ 24
= ~ EQUALS ~ 24
0 ~ INT_LIT ~ 24
to ~ TO ~ 24
@varlimit ~ VAR_ID ~ 24
) ~ R_PAREN ~ 24
{ ~ L_BRC ~ 24
for ~ FOR ~ 25
( ~ L_PAREN ~ 25
@subctr ~ VAR_ID ~ 25
= ~ EQUALS ~ 25
69 ~ INT_LIT ~ 25
downto ~ DOWNTO ~ 25
@varbase ~ VAR_ID ~ 25
) ~ R_PAREN ~ 25
{ ~ L_BRC ~ 25
out ~ OUT ~ 26
( ~ L_PAREN ~ 26
@subctr ~ VAR_ID ~ 26
) ~ R_PAREN ~ 26
; ~ SCOLON ~ 26
if ~ IF ~ 27
( ~ L_PAREN ~ 27
@subctr ~ VAR_ID ~ 27
% ~ MOD ~ 27
@varctr ~ VAR_ID ~ 27
) ~ R_PAREN ~ 27
{ ~ L_BRC ~ 27
out ~ OUT ~ 28
( ~ L_PAREN ~ 28
"etoyon" ~ STR_LIT ~ 28
, ~ COMMA ~ 28
@subctr ~ VAR_ID ~ 28
) ~ R_PAREN ~ 28
; ~ SCOLON ~ 28
} ~ R_BRC ~ 29
} ~ R_BRC ~ 30
} ~ R_BRC ~ 31
while ~ WHILE ~ 33
( ~ L_PAREN ~ 33
@varctr ~ VAR_ID ~ 33
!= ~ NOTEQUAL ~ 33
20 ~ INT_LIT ~ 33
) ~ R_PAREN ~ 33
{ ~ L_BRC ~ 33
@number ~ VAR_ID ~ 34
: ~ COLON ~ 34
integer ~ INT ~ 34
; ~ SCOLON ~ 34
in ~ IN ~ 35
( ~ L_PAREN ~ 35
@number ~ VAR_ID ~ 35
) ~ R_PAREN ~ 35
; ~ SCOLON ~ 35
out ~ OUT ~ 36
( ~ L_PAREN ~ 36
@varctr ~ VAR_ID ~ 36
) ~ R_PAREN ~ 36
; ~ SCOLON ~ 36
@varctr ~ VAR_ID ~ 38
++ ~ PLUSPLUS ~ 38
; ~ SCOLON ~ 38
} ~ R_BRC ~ 39
@data ~ VAR_ID ~ 41
: ~ COLON ~ 41
integer ~ INT ~ 41
; ~ SCOLON ~ 41
@data ~ VAR_ID ~ 42
= ~ EQUALS ~ 42
0a ~ INT_LIT ~ 42
; ~ SCOLON ~ 42
do ~ DO ~ 44
{ ~ L_BRC ~ 44
if ~ IF ~ 45
( ~ L_PAREN ~ 45
) ~ R_PAREN ~ 45
{ ~ L_BRC ~ 45
out ~ OUT ~ 46
( ~ L_PAREN ~ 46
@data ~ VAR_ID ~ 46
) ~ R_PAREN ~ 46
; ~ SCOLON ~ 46
} ~ R_BRC ~ 47
elsif ~ ELSIF ~ 48
( ~ L_PAREN ~ 48
@data ~ VAR_ID ~ 48
% ~ MOD ~ 48
2 ~ INT_LIT ~ 48
!= ~ NOTEQUAL ~ 48
0 ~ INT_LIT ~ 48
) ~ R_PAREN ~ 48
out ~ OUT ~ 49
( ~ L_PAREN ~ 49
@data ~ VAR_ID ~ 49
) ~ R_PAREN ~ 49
; ~ SCOLON ~ 49
} ~ R_BRC ~ 50
else ~ ELSE ~ 51
out ~ OUT ~ 52
( ~ L_PAREN ~ 52
"pak ganern" ~ STR_LIT ~ 52
) ~ R_PAREN ~ 52
; ~ SCOLON ~ 52
} ~ R_BRC ~ 53
} ~ R_BRC ~ 54
while ~ WHILE ~ 54
( ~ L_PAREN ~ 54
@data ~ VAR_ID ~ 54
< ~ LESS_THAN ~ 54
69 ~ INT_LIT ~ 54
) ~ R_PAREN ~ 54
; ~ SCOLON ~ 54
end ~ END ~ 56
$final_price ~ FN_ID ~ 59
( ~ L_PAREN ~ 59
@pr ~ VAR_ID ~ 59
: ~ COLON ~ 59
real ~ REAL ~ 59
, ~ COMMA ~ 59
@comm ~ VAR_ID ~ 59
: ~ COLON ~ 59
real ~ REAL ~ 59
, ~ COMMA ~ 59
@discount ~ VAR_ID ~ 59
: ~ COLON ~ 59
real ~ REAL ~ 59
) ~ R_PAREN ~ 59
returns ~ RET ~ 59
void ~ VOID ~ 59
is ~ IS ~ 59
@price ~ VAR_ID ~ 60
: ~ COLON ~ 60
real ~ REAL ~ 60
; ~ SCOLON ~ 60
@comm ~ VAR_ID ~ 62
= ~ EQUALS ~ 62
; ~ SCOLON ~ 62
out ~ OUT ~ 63
( ~ L_PAREN ~ 63
"Commission:" ~ STR_LIT ~ 63
, ~ COMMA ~ 63
@comm ~ VAR_ID ~ 63
) ~ R_PAREN ~ 63
; ~ SCOLON ~ 63
@comm2 ~ VAR_ID ~ 65
: ~ COLON ~ 65
real ~ REAL ~ 65
; ~ SCOLON ~ 65
@comm2 ~ VAR_ID ~ 66
= ~ EQUALS ~ 66
@comm ~ VAR_ID ~ 66
* ~ MULTI ~ 66
@pr ~ VAR_ID ~ 66
; ~ SCOLON